name: Build For Production

on:
  pull_request:
    branches:
      - master
      - 'release/**'
      - develop

jobs:
  build-prod:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 12.x ]

    steps:
      - uses: actions/checkout@master

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Prepare
          id: prep
          run: |
            DOCKER_IMAGE=weasylearn/weasylearn-frontend
            VERSION=noop
            ENVIRONMENT=noop
            if [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=$(echo ${GITHUB_REF#refs/heads/})
              if [ "master" = "$VERSION" ]; then
                VERSION=stage
                ENVIRONMENT=stage
              elif [ "develop" = "$VERSION" ]; then
                VERSION=dev
                ENVIRNOMENT=dev
              elif [[ $VERSION == release/* ]]; then
                VERSION=$(echo ${VERSION#release/})
                ENVIRONMENT=prod
              fi
            fi
            if [[ $VERSION == v-* ]]; then
              VERSION=$(echo ${VERSION#v-})
              TAGS="${DOCKER_IMAGE}:v-${VERSION},${DOCKER_IMAGE}:${VERSION}"
            fi
            TAGS="${DOCKER_IMAGE}:${VERSION}"
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
            if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
              MINOR=${VERSION%.*}
              MAJOR=${MINOR%.*}
              TAGS="$TAGS,${DOCKER_IMAGE}:v-${MINOR},${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:v-${MAJOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
            fi
            echo ::set-output name=version::${VERSION}
            echo ::set-output name=environment::${ENVIRONMENT}
            echo ::set-output name=tags::${TAGS}
            echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: chekcout envs repo
          uses: actions/checkout@master
          whit:
            repository: cadeca/weasylearn-envs
            token: ${{ secrets.API_TOKEN_GITHUB }}
            path: weasylearn-envs

      - name: copy profile from envs repo
        run: |
          cp waesylearn-envs/${{ steps.prep.outputs.environment }}/frontend/environment.prod.ts src/environments/environment.prod.ts

      - name: npm install and npm run build prod
        run: |
          npm i
          npm run build-prod
